{"version":3,"sources":["webpack:///examples/extendedHelloWorld/dist/extendedHelloWorld.js","webpack:///webpack/bootstrap 2a39b1b10df5aa8d1f65?c858***","webpack:///C:/Users/SFM Workstation/server/www/kompo/examples/extendedHelloWorld/src/extendedHelloWorld.js","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/component/Component.js?8806***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/dom/create.js?f239***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/isFunction.js?6252***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/isObject.js?0163***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/dom/replace.js?234e***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/merge.js?47aa***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/requestAnimationFrame.js?ae9e***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/matches.js?3e89***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/dom/extension.js?73af***","webpack:///C:/Users/SFM Workstation/server/www/kompo/src/utils/capitalize.js?fe66***"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_Component2","_Component3","_create","_create2","_extension","_extension2","App","_Component","this","apply","arguments","_this2","root","h1","input","on","e","state","name","target","react","props","replace","createText","append","data-heading","txt","defaultProps","document","body","setState","eventListenerCallback","Component","fn","ChildComponent","getRoot","_requestAnimationFrame2","update","bind","_extends","assign","i","length","source","key","hasOwnProperty","defineProperty","_requestAnimationFrame","_merge","_merge2","_replace","_replace2","_isFunction","_isFunction2","_matches","statefulls","mounts","stateless","isolated","initial","Error","render","l","mount","push","setParent","unmount","index","indexOf","splice","unmountByIndex","parent","mountRoutedComponent","_this","isFn","Node","Self","Router","getComponent","setIsolatedState","nest","callback","el","type","dFn","children","addEventListener","event","undefined","parentNode","matches","__kompo_component__","off","removeEventListener","tagName","attributes","Element","doc","createElement","addAttributes","keys","setAttribute","createFragment","createDocumentFragment","str","createTextNode","isFunction","functionToCheck","getType","toString","isObject","_typeof","Symbol","iterator","child","replaceLastChild","rLC","arg2isObject","_isObject2","replacedChild","lastChild","firstChild","replaceChild","appendChild","_isObject","merge","object","Array","shift","j","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","setTimeout","ep","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","extension","prefix","addPrefix","methodName","noPrefix","_capitalize2","ElementPrototype","FragPrototype","DocumentFragment","_value","getAttribute","hasAttribute","removeAttribute","textContent","appendFnName","appendFn","chain","ch","deep","cloneNode","cloneFnName","cloneFn","prependFnName","prependFn","insertBefore","parentElement","queryFnName","queryFn","selector","querySelector","queryAllFnName","queryAllFn","querySelectorAll","removeChild","emptyFnName","emptyFn","console","log","newElement","newSibling","nextSibling","href","_value2","_capitalize","capitalize","charAt","toUpperCase","slice"],"mappings":"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","file":"examples/extendedHelloWorld/dist/extendedHelloWorld.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Component2 = __webpack_require__(1);\n\t\n\tvar _Component3 = _interopRequireDefault(_Component2);\n\t\n\tvar _create = __webpack_require__(2);\n\t\n\tvar _create2 = _interopRequireDefault(_create);\n\t\n\tvar _extension = __webpack_require__(9);\n\t\n\tvar _extension2 = _interopRequireDefault(_extension);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Component and content creation classes and functions\n\t\n\t(0, _extension2.default)(); // Initialize without prefix\n\t\n\t// Setup root component\n\t\n\tvar App = function (_Component) {\n\t    _inherits(App, _Component);\n\t\n\t    function App() {\n\t        _classCallCheck(this, App);\n\t\n\t        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t    }\n\t\n\t    App.prototype.create = function create() {\n\t        var _this2 = this;\n\t\n\t        // Create elements\n\t        var root = (0, _create2.default)(),\n\t            h1 = (0, _create2.default)('h1', {\n\t            id: 'Primary heading' // Set attributes through an object\n\t        }),\n\t            input = (0, _create2.default)('input');\n\t\n\t        // Event listener, trigger update on keyup\n\t        this.on(input, 'keyup', function (e, state) {\n\t            if (state.name != e.target.value) {\n\t                state.name = e.target.value;\n\t                return true; // If value has changed return true\n\t            }\n\t            return false; // This could be omitted\n\t        });\n\t\n\t        // Statefull element, changes when an update is triggered by the event listener above\n\t        this.react(function (state) {\n\t            var name = typeof state.name !== 'undefined' && state.name !== '' ? state.name : _this2.props.name;\n\t            h1.replace((0, _create.createText)('Hello world, this is ' + name));\n\t        });\n\t\n\t        // Append children to root\n\t        root.append(h1, {\n\t            'data-heading': 'Primary heading' // Add more attributes on append\n\t        }, false).append('p').txt('Type your name to say \"Hello world\": ').append(input);\n\t\n\t        // Return the root\n\t        return root;\n\t    };\n\t\n\t    return App;\n\t}(_Component3.default);\n\t\n\t// Set a name as default property\n\t\n\tApp.defaultProps = {\n\t    name: 'Kompo'\n\t};\n\t\n\t// Append component to body; notice the empty state\n\t// and how it is used together with a default property\n\t// in the react callback above\n\tdocument.body.append(new App().setState({}));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _requestAnimationFrame = __webpack_require__(7);\n\t\n\tvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\t\n\tvar _merge = __webpack_require__(6);\n\t\n\tvar _merge2 = _interopRequireDefault(_merge);\n\t\n\tvar _replace = __webpack_require__(5);\n\t\n\tvar _replace2 = _interopRequireDefault(_replace);\n\t\n\tvar _isFunction = __webpack_require__(3);\n\t\n\tvar _isFunction2 = _interopRequireDefault(_isFunction);\n\t\n\tvar _matches = __webpack_require__(8);\n\t\n\tvar _matches2 = _interopRequireDefault(_matches);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Self-executing\n\t\n\t/**\r\n\t * A Component instance represents an interface component\r\n\t * which is decoupled from context, except for it's child\r\n\t * components, properties and/or the state.\r\n\t *\r\n\t * Properties SHOULD be set through the constructor function,\r\n\t * but can also be provided by the means of setters. The later,\r\n\t * however, is not implemented and up to the user.\r\n\t *\r\n\t * A component makes no assumptions about the form which a state\r\n\t * has, handling state is left to implement for the user. The\r\n\t * Component class does however provide functions for consistently\r\n\t * handling state. Examples of such functions are:\r\n\t *\r\n\t * - Component::react()\r\n\t * - Component::mount()\r\n\t * - Component::on()\r\n\t */\n\t\n\tvar Component = function () {\n\t    /**\r\n\t     * MAY be overridden, make sure to pass properties to the\r\n\t     * super() function. Overriding constructor MUST call super().\r\n\t     * @constructor\r\n\t     * @param {Object} props\r\n\t     */\n\t\n\t    function Component(props) {\n\t        _classCallCheck(this, Component);\n\t\n\t        // Merge props & defaultProps\n\t        // Do an Object.assign() to remove the reference to defaultProps\n\t        var defaultProps = _extends({}, this.constructor.defaultProps);\n\t        if (typeof defaultProps !== 'undefined' && typeof props !== 'undefined') {\n\t            this.props = (0, _merge2.default)(defaultProps, props);\n\t        } else {\n\t            this.props = props || defaultProps || {};\n\t        }\n\t\n\t        this.statefulls = [];\n\t        this.mounts = [];\n\t        this.stateless = true;\n\t        this.isolated = false;\n\t        this.initial = true;\n\t    }\n\t\n\t    /**\r\n\t     * IMPORTANT: Only for internal use, MUST\r\n\t     * not be called by users.\r\n\t     *\r\n\t     * MUST return an Element which represents the root of a component.\r\n\t     *\r\n\t     * Most of the work for rendering the component\r\n\t     * MAY be done here. It CAN be broken up into\r\n\t     * smaller function, however Component::create()\r\n\t     * MUST always return the resulting root Element.\r\n\t     *\r\n\t     * @returns {Element}\r\n\t     */\n\t\n\t    Component.prototype.create = function create() {\n\t        throw new Error('Component must override the create method and return an Node object.');\n\t    };\n\t\n\t    /**\r\n\t     * Outside facing interface for rendering the component.\r\n\t     *\r\n\t     * Call this function instead of\r\n\t     * Component::create() or Component::update()\r\n\t     *\r\n\t     * @returns {Element} this.root - root of the component\r\n\t     */\n\t\n\t    Component.prototype.render = function render() {\n\t        if (this.initial) {\n\t            this.root = this.create();\n\t            this.initial = false;\n\t            Object.defineProperty(this.root, '__kompo_component__', { writable: true, value: this });\n\t            return this.root;\n\t        } else {\n\t            this.update();\n\t            return this.root;\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * IMPORTANT: Only for internal use, MUST\r\n\t     * not be called by users.\r\n\t     *\r\n\t     * Updates the component and its child components,\r\n\t     * if these are not stateless or isolated\r\n\t     */\n\t\n\t    Component.prototype.update = function update() {\n\t        for (var i = 0, l = this.mounts.length; i < l; i++) {\n\t            var _Component = this.mounts[i];\n\t            if (_Component.stateless || _Component.isolated) continue;\n\t            _Component.update();\n\t        }\n\t\n\t        for (var i = 0, l = this.statefulls.length; i < l; i++) {\n\t            this.statefulls[i](this.state, this);\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Registers a statefull child component by:\r\n\t     *\r\n\t     * - Setting it as its parent\r\n\t     * - Passing along the state\r\n\t     *\r\n\t     * Components MAY be registered through Component::mount(),\r\n\t     * however those that are NOT ARE and WILL REMAIN stateless\r\n\t     * and will be excluded from the update cycle.\r\n\t     *\r\n\t     * If you only want to pass state without including\r\n\t     * it in the update cycle use: Component::setState().\r\n\t     *\r\n\t     * @param {Component} Component - child component\r\n\t     * @returns {Component} - child component\r\n\t     */\n\t\n\t    Component.prototype.mount = function mount(Component) {\n\t        this.mounts.push(Component);\n\t        Component.setParent(this);\n\t        Component.setState(this.state);\n\t        return Component;\n\t    };\n\t\n\t    /**\r\n\t     * Unregisters the component from its parent component,\r\n\t     * removing it from the update cycle.\r\n\t     *\r\n\t     * Returns the parent component.\r\n\t     *\r\n\t     * @param {Component} Component - child component\r\n\t     * @returns {Component} - parent component\r\n\t     */\n\t\n\t    Component.prototype.unmount = function unmount(Component) {\n\t        var index = this.mounts.indexOf(Component);\n\t        this.mounts.splice(index, 1);\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Unregisters the component from its parent component,\r\n\t     * removing it from the update cycle, by index of\r\n\t     * Component:mounts[]\r\n\t     *\r\n\t     * Returns the removed component.\r\n\t     *\r\n\t     * @param {Number} index\r\n\t     * @returns {Component} {*}\r\n\t     */\n\t\n\t    Component.prototype.unmountByIndex = function unmountByIndex(index) {\n\t        var Component = this.mounts[index];\n\t        this.mounts.splice(index, 1);\n\t        return Component;\n\t    };\n\t\n\t    /**\r\n\t     * IMPORTANT: Only for internal use, MUST\r\n\t     * not be called by users.\r\n\t     *\r\n\t     * Set the parent component of the component.\r\n\t     *\r\n\t     * Can produce unwanted side effect if set manually,\r\n\t     * because the compontent tree is changed.\r\n\t     *\r\n\t     * @param {Component} Component - child component\r\n\t     */\n\t\n\t    Component.prototype.setParent = function setParent(Component) {\n\t        this.parent = Component;\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Registers a closure which is called on\r\n\t     * Component::update() and handles the state.\r\n\t     *\r\n\t     * Cannot be called on stateless Components.\r\n\t     *\r\n\t     * @callback fn\r\n\t     * @param {Function} fn - closure which handles the state.\r\n\t     * @returns {*} - return value of closure\r\n\t     */\n\t\n\t    Component.prototype.react = function react(fn) {\n\t        if (this.stateless) throw new Error('Set state (through mount() or setState()) before registering a react function.');\n\t        this.statefulls.push(fn);\n\t        return fn(this.state, this);\n\t    };\n\t\n\t    /**\r\n\t     * Specialized function for registering a\r\n\t     * routed Component. This has to be an Element\r\n\t     * which holds the rendered root Element of the\r\n\t     * router Component.\r\n\t     *\r\n\t     * @param {(Node|Function)} parent - closure(component, state, self)\r\n\t     * @returns {Component} - the routed component\r\n\t     */\n\t\n\t    Component.prototype.mountRoutedComponent = function mountRoutedComponent(parent) {\n\t        var _this = this;\n\t\n\t        var isFn = false;\n\t        if ((0, _isFunction2.default)(parent)) {\n\t            isFn = true;\n\t        } else if (!parent instanceof Node) {\n\t            throw new Error('Routed Component cannot be assigned. Please make sure parent is a Node or a closure.');\n\t        }\n\t\n\t        return this.react(function (state, Self) {\n\t            var Component = state.Router.getComponent(_this);\n\t\n\t            if (Component) {\n\t                Component.setParent(_this);\n\t                Component.setState(state);\n\t                if (isFn) {\n\t                    parent.bind(_this)(Component, state, Self);\n\t                } else {\n\t                    (0, _replace2.default)(parent, Component);\n\t                }\n\t            }\n\t\n\t            return Component;\n\t        });\n\t    };\n\t\n\t    /**\r\n\t     * Set the state for the component & marks\r\n\t     * the component as statefull.\r\n\t     *\r\n\t     * Does not register for the component to\r\n\t     * the update cycle, for this use:\r\n\t     * Component::mount()\r\n\t     *\r\n\t     * @param {Object} state\r\n\t     * @returns {Component} - self\r\n\t     */\n\t\n\t    Component.prototype.setState = function setState(state) {\n\t        this.stateless = false;\n\t        this.state = state;\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Set state but also isolates the Component\r\n\t     * from its parent and the update cycle\r\n\t     *\r\n\t     * Child components are updated only if the\r\n\t     * update cycle is started from within the isolated\r\n\t     * component, for example by events.\r\n\t     *\r\n\t     * @param {Object} state\r\n\t     * @returns {Component} - self\r\n\t     */\n\t\n\t    Component.prototype.setIsolatedState = function setIsolatedState(state) {\n\t        this.setState(state);\n\t        this.isolated = true;\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Enables the user to nest Components and Nodes\r\n\t     *\r\n\t     * The nest function should be used twice,\r\n\t     * one time to define its place within the\r\n\t     * component (called without callback parameter)\r\n\t     * and one time with to define what should be\r\n\t     * nested (within a callback).\r\n\t     *\r\n\t     * @param {Function} [callback]\r\n\t     * @returns {(Component|Node|DocumentFragment|*)}\r\n\t     */\n\t\n\t    Component.prototype.nest = function nest(callback) {\n\t        if (arguments.length === 1) {\n\t            if (!(0, _isFunction2.default)(callback)) {\n\t                throw new Error('Nesting callback should be a function, please provide a valid callback.');\n\t            }\n\t\n\t            this.nest = callback;\n\t            return this;\n\t        } else {\n\t            return this.nest(this.state, this);\n\t        }\n\t    };\n\t\n\t    /**\r\n\t     * Adds an event listener or delegated event listener\r\n\t     * to the provided element and triggers the update cycle\r\n\t     * on its root component.\r\n\t     *\r\n\t     * If a component in the tree is marked as isolated. This\r\n\t     * component will be the root for the update cycle.\r\n\t     *\r\n\t     * @callback (fn|dFn)\r\n\t     * @param {Element} el - element to attach listener on\r\n\t     * @param {string} type | children - type of event or children selector for event delegation\r\n\t     * @param {(Function|string)} fn | type - closure for event or type of event\r\n\t     * @param {(undefined|Function)} [dFn] | type - closure for delegated event or undefined\r\n\t     * @returns {Component} - self\r\n\t     */\n\t\n\t    Component.prototype.on = function on(el, type, fn, dFn) {\n\t        var Component = this;\n\t        if (arguments.length === 4) {\n\t            (function () {\n\t                var children = type;\n\t                type = fn;\n\t                fn = dFn;\n\t\n\t                el.addEventListener(type, function (e) {\n\t                    var event = undefined,\n\t                        ChildComponent = undefined;\n\t\n\t                    for (var target = e.target; target && target != this; target = target.parentNode) {\n\t                        // loop parent nodes from the target to the delegation node\n\t                        if (target.matches(children)) {\n\t                            event = e;\n\t                        }\n\t\n\t                        if (typeof target.__kompo_component__ !== 'undefined') {\n\t                            ChildComponent = target.__kompo_component__;\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    if (typeof event !== 'undefined') {\n\t                        eventListenerCallback(Component, fn, event, Component.state, ChildComponent);\n\t                    }\n\t                }, false);\n\t            })();\n\t        } else {\n\t            el.addEventListener(type, function (e) {\n\t                eventListenerCallback(Component, fn, e, Component.state);\n\t            }, false);\n\t        }\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Removes the event listener on the given element &\r\n\t     * of a certain type.\r\n\t     *\r\n\t     * @param {Element} el - element for detaching a type of event listeners\r\n\t     * @param {string} type - type of event\r\n\t     * @returns {Component} - self\r\n\t     */\n\t\n\t    Component.prototype.off = function off(el, type) {\n\t        el.removeEventListener(type, eventListenerCallback, false);\n\t        return this;\n\t    };\n\t\n\t    /**\r\n\t     * Gets root component of current component\r\n\t     *\r\n\t     * @returns {Component} root\r\n\t     */\n\t\n\t    Component.prototype.getRoot = function getRoot() {\n\t        if (typeof this.parent !== 'undefined' && !this.isolated) {\n\t            var parent = this.parent;\n\t            while (typeof parent.parent !== 'undefined' && !parent.isolated) {\n\t                parent = parent.parent;\n\t            }\n\t            return parent;\n\t        } else {\n\t            return null;\n\t        }\n\t    };\n\t\n\t    return Component;\n\t}();\n\t\n\t/**\r\n\t * Callback for event listeners set through\r\n\t * Component::on().\r\n\t *\r\n\t * Recurses to the root and starts the update\r\n\t * cycle from this root.\r\n\t *\r\n\t * If a component in the tree is marked as isolated. This\r\n\t * component will be the root for the update cycle.\r\n\t *\r\n\t * @callback fn\r\n\t * @param {Component} Component - which the event callback is called\r\n\t * @param {Function} fn - closure for event callback\r\n\t * @param {Event} e - Event of callback\r\n\t * @param {*} state - application state\r\n\t * @param {Component} ChildComponent - The child component in a delegated call\r\n\t */\n\t\n\texports.default = Component;\n\tfunction eventListenerCallback(Component, fn, e, state, ChildComponent) {\n\t    if (fn.call(Component, e, state, Component, ChildComponent)) {\n\t        var root = Component.getRoot();\n\t        if (root === null) {\n\t            (0, _requestAnimationFrame2.default)(Component.update.bind(Component));\n\t        } else {\n\t            (0, _requestAnimationFrame2.default)(root.update.bind(root));\n\t        }\n\t    }\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = create;\n\texports.addAttributes = addAttributes;\n\texports.createFragment = createFragment;\n\texports.createText = createText;\n\tvar doc = document;\n\t\n\t/**\r\n\t * Creates an Element, when no tagName\r\n\t * is given it create an empty div to serve\r\n\t * as root.\r\n\t *\r\n\t * @param {string|undefined} tagName\r\n\t * @returns {Element}\r\n\t */\n\tfunction create(tagName, attributes) {\n\t    var Element = undefined;\n\t    if (typeof tagName === 'undefined') {\n\t        Element = doc.createElement('div');\n\t    } else {\n\t        Element = doc.createElement(tagName);\n\t    }\n\t\n\t    if (typeof attributes !== 'undefined') {\n\t        addAttributes(Element, attributes);\n\t    }\n\t\n\t    return Element;\n\t}\n\t\n\t/**\r\n\t * Adds attributes to an Element\r\n\t * through iterating through an object\r\n\t *\r\n\t * @param {Element} Element\r\n\t * @param {Object} obj\r\n\t * @returns {Element}\r\n\t */\n\tfunction addAttributes(Element, obj) {\n\t    var keys = Object.keys(obj);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i],\n\t            value = obj[key];\n\t        Element.setAttribute(key, value);\n\t    }\n\t    return Element;\n\t}\n\t\n\t/**\r\n\t * Syntactic sugar for creating a DocumentFragment\r\n\t *\r\n\t * @returns {DocumentFragment}\r\n\t */\n\tfunction createFragment() {\n\t    return doc.createDocumentFragment();\n\t}\n\t\n\t/**\r\n\t * Syntactic sugar for creating a TextNode\r\n\t *\r\n\t * @param {string} str\r\n\t * @returns {Text}\r\n\t */\n\tfunction createText(str) {\n\t    return doc.createTextNode(str);\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = isFunction;\n\t/**\r\n\t * Checks if given variable is a function\r\n\t *\r\n\t * @param {*} functionToCheck\r\n\t * @returns {boolean}\r\n\t */\n\tfunction isFunction(functionToCheck) {\n\t  var getType = {};\n\t  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = isObject;\n\t/**\r\n\t * Checks if `value` is the language type of `Object`.\r\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n\t *\r\n\t * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @category Lang\r\n\t * @param {*} value The value to check.\r\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n\t * @example\r\n\t *\r\n\t * _.isObject({});\r\n\t * // => true\r\n\t *\r\n\t * _.isObject([1, 2, 3]);\r\n\t * // => true\r\n\t *\r\n\t * _.isObject(1);\r\n\t * // => false\r\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\t  return type == 'function' || value && type == 'object' || false;\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = replace;\n\t\n\tvar _create = __webpack_require__(2);\n\t\n\tvar _create2 = _interopRequireDefault(_create);\n\t\n\tvar _Component = __webpack_require__(1);\n\t\n\tvar _Component2 = _interopRequireDefault(_Component);\n\t\n\tvar _isObject = __webpack_require__(4);\n\t\n\tvar _isObject2 = _interopRequireDefault(_isObject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t *  Replaces an Node for another one\r\n\t *\r\n\t * @param {Node} parent - parent element to replace child on\r\n\t * @param {*} child - new child to replace for old child\r\n\t * @param {boolean} replaceLastChild - replace first or last child\r\n\t * @returns {Node} child - child element\r\n\t */\n\tfunction replace(parent, child) {\n\t    var replaceLastChild = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\t    var rLC = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t\n\t    var arg2isObject = (0, _isObject2.default)(arguments[2]);\n\t    var replacedChild = undefined;\n\t    if (arg2isObject) {\n\t        replacedChild = rLC ? parent.lastChild : parent.firstChild;\n\t    } else {\n\t        replacedChild = replaceLastChild ? parent.lastChild : parent.firstChild;\n\t    }\n\t\n\t    if (typeof child === 'string') {\n\t        child = (0, _create2.default)(child);\n\t    }\n\t\n\t    if (child instanceof _Component2.default) {\n\t        child = child.render();\n\t    }\n\t\n\t    if (arg2isObject) {\n\t        (0, _create.addAttributes)(child, replaceLastChild);\n\t    }\n\t\n\t    if (replacedChild) {\n\t        parent.replaceChild(child, replacedChild);\n\t    } else {\n\t        parent.appendChild(child);\n\t    }\n\t\n\t    return child;\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = merge;\n\t/**\r\n\t * Merges given objects\r\n\t *\r\n\t * @param {...Object} objs - Any given amount of objects\r\n\t * @returns {Object}\r\n\t */\n\tfunction merge() {\n\t    var object = Array.prototype.shift.call(arguments);\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var obj = arguments[i];\n\t        for (var j in obj) {\n\t            object[j] = obj[j];\n\t        }\n\t    }\n\t\n\t    return object;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\r\n\t * RequestAnimationFrame polyfill\r\n\t *\r\n\t * @returns {*}\r\n\t */\n\t\n\texports.default = function requestAnimationFrame() {\n\t  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n\t    window.setTimeout(callback, 1000 / 60);\n\t  };\n\t}();\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\r\n\t * Polyfills the matches function on Elements\r\n\t *\r\n\t * Used with event delegation in Components class\r\n\t */\n\t\n\texports.default = function () {\n\t    if (!Element.prototype.matches) {\n\t        var ep = Element.prototype;\n\t\n\t        if (ep.webkitMatchesSelector) // Chrome <34, SF<7.1, iOS<8\n\t            ep.matches = ep.webkitMatchesSelector;\n\t\n\t        if (ep.msMatchesSelector) // IE9/10/11 & Edge\n\t            ep.matches = ep.msMatchesSelector;\n\t\n\t        if (ep.mozMatchesSelector) // FF<34\n\t            ep.matches = ep.mozMatchesSelector;\n\t    }\n\t}();\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = extension;\n\t\n\tvar _capitalize = __webpack_require__(10);\n\t\n\tvar _capitalize2 = _interopRequireDefault(_capitalize);\n\t\n\tvar _Component = __webpack_require__(1);\n\t\n\tvar _Component2 = _interopRequireDefault(_Component);\n\t\n\tvar _replace = __webpack_require__(5);\n\t\n\tvar _replace2 = _interopRequireDefault(_replace);\n\t\n\tvar _create = __webpack_require__(2);\n\t\n\tvar _isObject = __webpack_require__(4);\n\t\n\tvar _isObject2 = _interopRequireDefault(_isObject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * DOM extension can be prefixed with arbitrary string\r\n\t *\r\n\t * @param {string} prefix\r\n\t */\n\tfunction extension(prefix) {\n\t    // Prevent lookups\n\t    var noPrefix = typeof prefix === 'undefined',\n\t        doc = document,\n\t        ElementPrototype = Element.prototype,\n\t        FragPrototype = DocumentFragment.prototype;\n\t\n\t    /**\r\n\t     * Returns (prefixed) methodName\r\n\t     *\r\n\t     * @param methodName\r\n\t     * @returns {string}\r\n\t     */\n\t    function addPrefix(methodName) {\n\t        if (noPrefix) {\n\t            return methodName;\n\t        }\n\t\n\t        return prefix + (0, _capitalize2.default)(methodName);\n\t    }\n\t    /**\r\n\t     * Syntactic sugar for getting/setting a attribute.\r\n\t     *\r\n\t     * @param {string} name\r\n\t     * @param {*} value\r\n\t     * @returns {*|Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('attr'), { value: function value(name, _value) {\n\t            if (arguments.length === 1) {\n\t                return this.getAttribute(name);\n\t            } else {\n\t                this.setAttribute(name, _value);\n\t                return this;\n\t            }\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for checking if an attribute exists.\r\n\t     *\r\n\t     * @param {string} name\r\n\t     * @returns {boolean}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('hasAttr'), { value: function value(name) {\n\t            return this.hasAttribute(name);\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for removing an attribute.\r\n\t     *\r\n\t     * @param {string} name\r\n\t     * @returns {Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('removeAttr'), { value: function value(name) {\n\t            this.removeAttribute(name);\n\t            return this;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting or setting a TextNode.\r\n\t     *\r\n\t     * @param {string} txt\r\n\t     * @returns {Element|Text}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('txt'), { value: function value(txt) {\n\t            if (arguments.length === 1) {\n\t                this.appendChild(doc.createTextNode(txt));\n\t                return this;\n\t            } else {\n\t                return this.textContent;\n\t            }\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for appending an Element.\r\n\t     *\r\n\t     * @param {*} child\r\n\t     * @param {boolean} chain\r\n\t     * @returns {Element}\r\n\t     */\n\t    var appendFnName = addPrefix('append'),\n\t        appendFn = function appendFn(child) {\n\t        var chain = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t        var ch = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t\n\t        if (typeof child === 'string') {\n\t            child = doc.createElement(child);\n\t        }\n\t\n\t        if (child instanceof _Component2.default) {\n\t            child = child.render();\n\t        }\n\t\n\t        this.appendChild(child);\n\t\n\t        if ((0, _isObject2.default)(arguments[1])) {\n\t            (0, _create.addAttributes)(child, chain);\n\t            return ch ? child : this;\n\t        } else {\n\t            return chain ? child : this;\n\t        }\n\t    };\n\t    Object.defineProperty(ElementPrototype, appendFnName, { value: appendFn });\n\t    Object.defineProperty(FragPrototype, appendFnName, { value: appendFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar for appending an Element\r\n\t     * on the parent of current Element.\r\n\t     *\r\n\t     * @param {*} child\r\n\t     * @param {boolean} chain\r\n\t     * @returns {Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('parentAppend'), { value: function value(child) {\n\t            var chain = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t            var ch = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t\n\t            return this.parentNode.append(child, chain, ch);\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for appending an cloned Element\r\n\t     * to its parent.\r\n\t     *\r\n\t     * BEWARE: It does not copy event listeners\r\n\t     * BEWARE: deep option can have serious performance implications\r\n\t     *\r\n\t     * @param {boolean} deep = deep copy or not\r\n\t     * @returns {Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('cloneAppend'), { value: function value() {\n\t            var deep = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\t\n\t            return this.parentNode.append(this.cloneNode(deep));\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for cloning an Element\r\n\t     *\r\n\t     * BEWARE: It does not copy event listeners\r\n\t     * BEWARE: deep option can have serious performance implications\r\n\t     *\r\n\t     * @param {boolean} deep = deep copy or not\r\n\t     * @returns {Element}\r\n\t     */\n\t    var cloneFnName = addPrefix('clone'),\n\t        cloneFn = function cloneFn() {\n\t        var deep = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\t\n\t        return this.cloneNode(deep);\n\t    };\n\t    Object.defineProperty(ElementPrototype, cloneFnName, { value: cloneFn });\n\t    Object.defineProperty(FragPrototype, cloneFnName, { value: cloneFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar for prepending an Element.\r\n\t     *\r\n\t     * @param {*} child\r\n\t     * @param {boolean} chain\r\n\t     * @returns {Element}\r\n\t     */\n\t    var prependFnName = addPrefix('prepend'),\n\t        prependFn = function prependFn(child) {\n\t        var chain = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t        var ch = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t\n\t        var firstChild = this.firstChild;\n\t\n\t        if (typeof child === 'string') {\n\t            child = doc.createElement(child);\n\t        }\n\t\n\t        if (child instanceof _Component2.default) {\n\t            child = child.render();\n\t        }\n\t\n\t        if (firstChild) {\n\t            this.insertBefore(child, firstChild);\n\t        } else {\n\t            this.append(child);\n\t        }\n\t\n\t        if ((0, _isObject2.default)(arguments[1])) {\n\t            (0, _create.addAttributes)(child, chain);\n\t            return ch ? child : this;\n\t        } else {\n\t            return chain ? child : this;\n\t        }\n\t    };\n\t    Object.defineProperty(ElementPrototype, prependFnName, { value: prependFn });\n\t    Object.defineProperty(FragPrototype, prependFnName, { value: prependFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting the parent Element.\r\n\t     *\r\n\t     * @returns {Element|Node}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('parent'), { value: function value() {\n\t            return this.parentElement || this.parentNode;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for checking if the Element\r\n\t     * has a parent.\r\n\t     *\r\n\t     * @returns {boolean}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('hasParent'), { value: function value() {\n\t            return !(this.parentElement === null && this.parentNode === null);\n\t        } });\n\t\n\t    /**\r\n\t     * Recurse to the root Element (which has no parent)\r\n\t     *\r\n\t     * @returns {Element|Node}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('root'), { value: function value(parent) {\n\t            parent = !parent ? this.parentElement || this.parentNode : parent;\n\t\n\t            while ((parent.parentElement || parent.parentNode) !== null) {\n\t                parent = this.root(parent.parentElement || parent.parentNode);\n\t            }\n\t\n\t            return parent;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for document.querySelector()\r\n\t     *\r\n\t     * @param {string} selector\r\n\t     * @returns {Element}\r\n\t     */\n\t    var queryFnName = addPrefix('query'),\n\t        queryFn = function queryFn(selector) {\n\t        return this.querySelector(selector);\n\t    };\n\t    Object.defineProperty(ElementPrototype, queryFnName, { value: queryFn });\n\t    Object.defineProperty(FragPrototype, queryFnName, { value: queryFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar for document.querySelectorAll()\r\n\t     *\r\n\t     * @param {string} selector\r\n\t     * @returns {HTMLCollection}\r\n\t     */\n\t    var queryAllFnName = addPrefix('queryAll'),\n\t        queryAllFn = function queryAllFn(selector) {\n\t        return this.querySelectorAll(selector);\n\t    };\n\t    Object.defineProperty(ElementPrototype, queryAllFnName, { value: queryAllFn });\n\t    Object.defineProperty(FragPrototype, queryAllFnName, { value: queryAllFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar/polyfill for Element.remove()\r\n\t     *\r\n\t     * @returns {Element}\r\n\t     */\n\t    if (!('remove' in ElementPrototype)) {\n\t        Object.defineProperty(ElementPrototype, addPrefix('remove'), {\n\t            value: function value() {\n\t                var parent = this.parentNode;\n\t                if (parent) {\n\t                    parent.removeChild(this);\n\t                }\n\t            }\n\t        });\n\t    }\n\t\n\t    /**\r\n\t     * Syntactic sugar for removing all child Elements\\Nodes\r\n\t     *\r\n\t     * @returns {Element}\r\n\t     */\n\t    var emptyFnName = addPrefix('empty'),\n\t        emptyFn = function emptyFn() {\n\t        while (this.lastChild) {\n\t            this.removeChild(this.lastChild);\n\t        }\n\t        return this;\n\t    };\n\t    Object.defineProperty(ElementPrototype, emptyFnName, { value: emptyFn });\n\t    Object.defineProperty(FragPrototype, emptyFnName, { value: emptyFn });\n\t\n\t    /**\r\n\t     * Syntactic sugar for logging\r\n\t     *\r\n\t     * When chain methods it can be used to log an Element\r\n\t     * right in the middle of the chain.\r\n\t     *\r\n\t     * @returns {Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('log'), { value: function value() {\n\t            console.log(this);\n\t            return this;\n\t        } });\n\t\n\t    /**\r\n\t     * @see ./replace.js\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('replace'), { value: function value(child) {\n\t            var replaceLastChild = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t            return (0, _replace2.default)(this, child, replaceLastChild);\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for replacing the\r\n\t     * current Element with a new one.\r\n\t     *\r\n\t     * BEWARE: a parent Element must exist\r\n\t     *\r\n\t     * @returns {Element} - return the new Element\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('replaceWith'), { value: function value(newElement, attributes) {\n\t            if (typeof newElement === 'string') {\n\t                newElement = doc.createElement(newElement);\n\t            }\n\t\n\t            if (typeof attributes !== 'undefined') {\n\t                (0, _create.addAttributes)(newElement, attributes);\n\t            }\n\t\n\t            this.parentNode.replaceChild(this, newElement);\n\t            return newElement;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for inserting an Element\r\n\t     * before another Element\r\n\t     *\r\n\t     * BEWARE: a parenNode needs to be available\r\n\t     *\r\n\t     * @returns {Element} - the new Element\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('before'), { value: function value(newSibling, attributes) {\n\t            var parentNode = this.parentNode;\n\t\n\t            if (typeof newSibling === 'string') {\n\t                newSibling = doc.createElement(newSibling);\n\t            }\n\t\n\t            if (newSibling instanceof _Component2.default) {\n\t                newSibling = newSibling.render();\n\t            }\n\t\n\t            if (typeof attributes !== 'undefined') {\n\t                (0, _create.addAttributes)(newSibling, attributes);\n\t            }\n\t\n\t            if (parentNode) {\n\t                parentNode.insertBefore(newSibling, this);\n\t            }\n\t            return newSibling;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for inserting an Element\r\n\t     * after another Element\r\n\t     *\r\n\t     * BEWARE: a parenNode needs to be available\r\n\t     *\r\n\t     * @returns {Element} - the new Element\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('after'), { value: function value(newSibling, attributes) {\n\t            var parentNode = this.parentNode,\n\t                nextSibling = this.nextSibling;\n\t\n\t            if (typeof newSibling === 'string') {\n\t                newSibling = doc.createElement(newSibling);\n\t            }\n\t\n\t            if (newSibling instanceof _Component2.default) {\n\t                newSibling = newSibling.render();\n\t            }\n\t\n\t            if (typeof attributes !== 'undefined') {\n\t                (0, _create.addAttributes)(newSibling, attributes);\n\t            }\n\t\n\t            if (parentNode) {\n\t                if (nextSibling) {\n\t                    parentNode.insertBefore(newSibling, nextSibling);\n\t                } else {\n\t                    parentNode.appendChild(newSibling);\n\t                }\n\t            }\n\t\n\t            return newSibling;\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting/setting the id\r\n\t     * of an Element\r\n\t     *\r\n\t     * @param {*} id\r\n\t     * @returns {string|Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('i'), { value: function value(id) {\n\t            if (arguments.length === 0) {\n\t                return this.id;\n\t            } else {\n\t                this.id = id;\n\t                return this;\n\t            }\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting/setting the name\r\n\t     * of an Element\r\n\t     *\r\n\t     * @param {*} name\r\n\t     * @returns {string|Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('n'), { value: function value(name) {\n\t            if (arguments.length === 0) {\n\t                return this.name;\n\t            } else {\n\t                this.name = name;\n\t                return this;\n\t            }\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting/setting the href\r\n\t     * of an Element\r\n\t     *\r\n\t     * @param {*} href\r\n\t     * @returns {string|Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('h'), { value: function value(href) {\n\t            if (arguments.length === 0) {\n\t                return this.href;\n\t            } else {\n\t                this.href = href;\n\t                return this;\n\t            }\n\t        } });\n\t\n\t    /**\r\n\t     * Syntactic sugar for getting/setting the value\r\n\t     * of an Element\r\n\t     *\r\n\t     * @param {*} value\r\n\t     * @returns {string|Element}\r\n\t     */\n\t    Object.defineProperty(ElementPrototype, addPrefix('v'), { value: function value(_value2) {\n\t            if (arguments.length === 0) {\n\t                return this.value;\n\t            } else {\n\t                this.value = _value2;\n\t                return this;\n\t            }\n\t        } });\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = capitalize;\n\t/**\n\t * Capitalizes string\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tfunction capitalize(str) {\n\t    if (typeof str === \"string\") {\n\t        return str.charAt(0).toUpperCase() + str.slice(1);\n\t    }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** examples/extendedHelloWorld/dist/extendedHelloWorld.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2a39b1b10df5aa8d1f65\n **/","// Component and content creation classes and functions\r\nimport Component from '../../../src/component/Component.js';\r\nimport c, { createText } from '../../../src/dom/create.js';\r\nimport addExtensions from '../../../src/dom/extension.js';\r\naddExtensions(); // Initialize without prefix\r\n\r\n// Setup root component\r\nclass App extends Component {\r\n    create() {\r\n        // Create elements\r\n        const root = c(),\r\n            h1 = c('h1', {\r\n                id: 'Primary heading' // Set attributes through an object\r\n            }),\r\n            input = c('input');\r\n\r\n        // Event listener, trigger update on keyup\r\n        this.on(input, 'keyup', (e, state) => {\r\n            if(state.name != e.target.value) {\r\n                state.name = e.target.value;\r\n                return true; // If value has changed return true\r\n            }\r\n            return false; // This could be omitted\r\n        });\r\n\r\n        // Statefull element, changes when an update is triggered by the event listener above\r\n        this.react((state) => {\r\n            const name = typeof state.name !== 'undefined' && state.name !== ''? state.name: this.props.name;\r\n            h1.replace(createText('Hello world, this is ' + name));\r\n        });\r\n\r\n        // Append children to root\r\n        root\r\n            .append(h1, {\r\n               'data-heading': 'Primary heading' // Add more attributes on append\r\n            }, false)\r\n            .append('p').txt('Type your name to say \"Hello world\": ')\r\n                .append(input);\r\n\r\n        // Return the root\r\n        return root;\r\n    }\r\n}\r\n\r\n// Set a name as default property\r\nApp.defaultProps = {\r\n    name: 'Kompo'\r\n};\r\n\r\n// Append component to body; notice the empty state\r\n// and how it is used together with a default property\r\n// in the react callback above\r\ndocument.body.append(new App().setState({}));\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/examples/extendedHelloWorld/src/extendedHelloWorld.js\n **/","import RAF from '../utils/requestAnimationFrame.js';\r\nimport merge from '../utils/merge.js';\r\nimport replace from '../dom/replace.js';\r\nimport isFunction from '../utils/isFunction.js';\r\nimport matches from '../utils/matches.js'; // Self-executing\r\n\r\n/**\r\n * A Component instance represents an interface component\r\n * which is decoupled from context, except for it's child\r\n * components, properties and/or the state.\r\n *\r\n * Properties SHOULD be set through the constructor function,\r\n * but can also be provided by the means of setters. The later,\r\n * however, is not implemented and up to the user.\r\n *\r\n * A component makes no assumptions about the form which a state\r\n * has, handling state is left to implement for the user. The\r\n * Component class does however provide functions for consistently\r\n * handling state. Examples of such functions are:\r\n *\r\n * - Component::react()\r\n * - Component::mount()\r\n * - Component::on()\r\n */\r\nexport default class Component {\r\n    /**\r\n     * MAY be overridden, make sure to pass properties to the\r\n     * super() function. Overriding constructor MUST call super().\r\n     * @constructor\r\n     * @param {Object} props\r\n     */\r\n    constructor(props) {\r\n        // Merge props & defaultProps\r\n        // Do an Object.assign() to remove the reference to defaultProps\r\n        const defaultProps = Object.assign({},this.constructor.defaultProps);\r\n        if(typeof defaultProps !== 'undefined' && typeof props !== 'undefined') {\r\n            this.props = merge(defaultProps, props);\r\n        } else {\r\n            this.props = props || defaultProps || {};\r\n        }\r\n\r\n        this.statefulls = [];\r\n        this.mounts = [];\r\n        this.stateless = true;\r\n        this.isolated = false;\r\n        this.initial = true;\r\n    }\r\n\r\n    /**\r\n     * IMPORTANT: Only for internal use, MUST\r\n     * not be called by users.\r\n     *\r\n     * MUST return an Element which represents the root of a component.\r\n     *\r\n     * Most of the work for rendering the component\r\n     * MAY be done here. It CAN be broken up into\r\n     * smaller function, however Component::create()\r\n     * MUST always return the resulting root Element.\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    create() {\r\n        throw new Error('Component must override the create method and return an Node object.');\r\n    }\r\n\r\n    /**\r\n     * Outside facing interface for rendering the component.\r\n     *\r\n     * Call this function instead of\r\n     * Component::create() or Component::update()\r\n     *\r\n     * @returns {Element} this.root - root of the component\r\n     */\r\n    render() {\r\n        if(this.initial) {\r\n            this.root = this.create();\r\n            this.initial = false;\r\n            Object.defineProperty(this.root, '__kompo_component__' , { writable: true,  value: this });\r\n            return this.root;\r\n        } else {\r\n            this.update();\r\n            return this.root\r\n        }\r\n    }\r\n\r\n    /**\r\n     * IMPORTANT: Only for internal use, MUST\r\n     * not be called by users.\r\n     *\r\n     * Updates the component and its child components,\r\n     * if these are not stateless or isolated\r\n     */\r\n    update() {\r\n        for(let i = 0, l = this.mounts.length; i < l; i++) {\r\n            const Component = this.mounts[i];\r\n            if(Component.stateless || Component.isolated) continue;\r\n            Component.update();\r\n        }\r\n\r\n        for(let i = 0, l = this.statefulls.length; i < l; i++) {\r\n            this.statefulls[i](this.state, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers a statefull child component by:\r\n     *\r\n     * - Setting it as its parent\r\n     * - Passing along the state\r\n     *\r\n     * Components MAY be registered through Component::mount(),\r\n     * however those that are NOT ARE and WILL REMAIN stateless\r\n     * and will be excluded from the update cycle.\r\n     *\r\n     * If you only want to pass state without including\r\n     * it in the update cycle use: Component::setState().\r\n     *\r\n     * @param {Component} Component - child component\r\n     * @returns {Component} - child component\r\n     */\r\n    mount(Component) {\r\n        this.mounts.push(Component);\r\n        Component.setParent(this);\r\n        Component.setState(this.state);\r\n        return Component;\r\n    }\r\n\r\n    /**\r\n     * Unregisters the component from its parent component,\r\n     * removing it from the update cycle.\r\n     *\r\n     * Returns the parent component.\r\n     *\r\n     * @param {Component} Component - child component\r\n     * @returns {Component} - parent component\r\n     */\r\n    unmount(Component) {\r\n        const index = this.mounts.indexOf(Component);\r\n        this.mounts.splice(index, 1);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unregisters the component from its parent component,\r\n     * removing it from the update cycle, by index of\r\n     * Component:mounts[]\r\n     *\r\n     * Returns the removed component.\r\n     *\r\n     * @param {Number} index\r\n     * @returns {Component} {*}\r\n     */\r\n    unmountByIndex(index) {\r\n        const Component = this.mounts[index];\r\n        this.mounts.splice(index, 1);\r\n        return Component;\r\n    }\r\n\r\n    /**\r\n     * IMPORTANT: Only for internal use, MUST\r\n     * not be called by users.\r\n     *\r\n     * Set the parent component of the component.\r\n     *\r\n     * Can produce unwanted side effect if set manually,\r\n     * because the compontent tree is changed.\r\n     *\r\n     * @param {Component} Component - child component\r\n     */\r\n    setParent(Component) {\r\n        this.parent = Component;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Registers a closure which is called on\r\n     * Component::update() and handles the state.\r\n     *\r\n     * Cannot be called on stateless Components.\r\n     *\r\n     * @callback fn\r\n     * @param {Function} fn - closure which handles the state.\r\n     * @returns {*} - return value of closure\r\n     */\r\n    react(fn) {\r\n        if(this.stateless) throw new Error('Set state (through mount() or setState()) before registering a react function.');\r\n        this.statefulls.push(fn);\r\n        return fn(this.state, this);\r\n    }\r\n\r\n    /**\r\n     * Specialized function for registering a\r\n     * routed Component. This has to be an Element\r\n     * which holds the rendered root Element of the\r\n     * router Component.\r\n     *\r\n     * @param {(Node|Function)} parent - closure(component, state, self)\r\n     * @returns {Component} - the routed component\r\n     */\r\n    mountRoutedComponent(parent) {\r\n        let isFn = false;\r\n        if(isFunction(parent)) {\r\n            isFn = true;\r\n        } else if(!parent instanceof Node) {\r\n            throw new Error('Routed Component cannot be assigned. Please make sure parent is a Node or a closure.');\r\n        }\r\n\r\n        return this.react((state, Self) => {\r\n            const Component = state.Router.getComponent(this);\r\n\r\n            if(Component) {\r\n                Component.setParent(this);\r\n                Component.setState(state);\r\n                if(isFn) {\r\n                    parent.bind(this)(Component, state, Self);\r\n                } else {\r\n                    replace(parent, Component);\r\n                }\r\n            }\r\n\r\n            return Component;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the state for the component & marks\r\n     * the component as statefull.\r\n     *\r\n     * Does not register for the component to\r\n     * the update cycle, for this use:\r\n     * Component::mount()\r\n     *\r\n     * @param {Object} state\r\n     * @returns {Component} - self\r\n     */\r\n    setState(state) {\r\n        this.stateless = false;\r\n        this.state = state;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set state but also isolates the Component\r\n     * from its parent and the update cycle\r\n     *\r\n     * Child components are updated only if the\r\n     * update cycle is started from within the isolated\r\n     * component, for example by events.\r\n     *\r\n     * @param {Object} state\r\n     * @returns {Component} - self\r\n     */\r\n    setIsolatedState(state) {\r\n        this.setState(state);\r\n        this.isolated = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enables the user to nest Components and Nodes\r\n     *\r\n     * The nest function should be used twice,\r\n     * one time to define its place within the\r\n     * component (called without callback parameter)\r\n     * and one time with to define what should be\r\n     * nested (within a callback).\r\n     *\r\n     * @param {Function} [callback]\r\n     * @returns {(Component|Node|DocumentFragment|*)}\r\n     */\r\n    nest(callback) {\r\n        if (arguments.length === 1) {\r\n            if(!isFunction(callback)) {\r\n                throw new Error('Nesting callback should be a function, please provide a valid callback.');\r\n            }\r\n\r\n            this.nest = callback;\r\n            return this;\r\n        } else {\r\n            return this.nest(this.state, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener or delegated event listener\r\n     * to the provided element and triggers the update cycle\r\n     * on its root component.\r\n     *\r\n     * If a component in the tree is marked as isolated. This\r\n     * component will be the root for the update cycle.\r\n     *\r\n     * @callback (fn|dFn)\r\n     * @param {Element} el - element to attach listener on\r\n     * @param {string} type | children - type of event or children selector for event delegation\r\n     * @param {(Function|string)} fn | type - closure for event or type of event\r\n     * @param {(undefined|Function)} [dFn] | type - closure for delegated event or undefined\r\n     * @returns {Component} - self\r\n     */\r\n    on(el, type, fn, dFn) {\r\n        const Component = this;\r\n        if(arguments.length === 4) {\r\n            const children = type;\r\n            type = fn;\r\n            fn = dFn;\r\n\r\n            el.addEventListener(type, function(e) {\r\n                let event, ChildComponent;\r\n\r\n                for (let target=e.target; target && target!=this; target=target.parentNode) {\r\n                    // loop parent nodes from the target to the delegation node\r\n                    if (target.matches(children)) {\r\n                       event = e;\r\n                    }\r\n\r\n                    if(typeof target.__kompo_component__ !== 'undefined') {\r\n                        ChildComponent = target.__kompo_component__;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(typeof event !== 'undefined') {\r\n                    eventListenerCallback(Component, fn, event, Component.state, ChildComponent);\r\n                }\r\n            }, false);\r\n        } else {\r\n            el.addEventListener(type, (e) => {\r\n                eventListenerCallback(Component, fn, e, Component.state);\r\n            }, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Removes the event listener on the given element &\r\n     * of a certain type.\r\n     *\r\n     * @param {Element} el - element for detaching a type of event listeners\r\n     * @param {string} type - type of event\r\n     * @returns {Component} - self\r\n     */\r\n    off(el, type) {\r\n        el.removeEventListener(type, eventListenerCallback, false);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets root component of current component\r\n     *\r\n     * @returns {Component} root\r\n     */\r\n    getRoot() {\r\n        if(typeof this.parent !== 'undefined' && !this.isolated) {\r\n            let parent = this.parent;\r\n            while (typeof parent.parent !== 'undefined' && !parent.isolated) {\r\n                parent = parent.parent\r\n            }\r\n            return parent;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Callback for event listeners set through\r\n * Component::on().\r\n *\r\n * Recurses to the root and starts the update\r\n * cycle from this root.\r\n *\r\n * If a component in the tree is marked as isolated. This\r\n * component will be the root for the update cycle.\r\n *\r\n * @callback fn\r\n * @param {Component} Component - which the event callback is called\r\n * @param {Function} fn - closure for event callback\r\n * @param {Event} e - Event of callback\r\n * @param {*} state - application state\r\n * @param {Component} ChildComponent - The child component in a delegated call\r\n */\r\nfunction eventListenerCallback(Component, fn, e, state, ChildComponent) {\r\n    if(fn.call(Component, e, state, Component, ChildComponent)) {\r\n        const root = Component.getRoot();\r\n        if(root === null) {\r\n            RAF(Component.update.bind(Component));\r\n        } else {\r\n            RAF(root.update.bind(root));\r\n        }\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/component/Component.js\n **/","const doc = document;\r\n\r\n/**\r\n * Creates an Element, when no tagName\r\n * is given it create an empty div to serve\r\n * as root.\r\n *\r\n * @param {string|undefined} tagName\r\n * @returns {Element}\r\n */\r\nexport default function create(tagName, attributes) {\r\n    let Element;\r\n    if(typeof tagName === 'undefined') {\r\n        Element = doc.createElement('div');\r\n    } else {\r\n        Element = doc.createElement(tagName);\r\n    }\r\n\r\n    if(typeof attributes !== 'undefined') {\r\n        addAttributes(Element, attributes);\r\n    }\r\n\r\n    return Element\r\n}\r\n\r\n/**\r\n * Adds attributes to an Element\r\n * through iterating through an object\r\n *\r\n * @param {Element} Element\r\n * @param {Object} obj\r\n * @returns {Element}\r\n */\r\nexport function addAttributes(Element, obj) {\r\n    const keys = Object.keys(obj);\r\n    for(let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i],\r\n            value = obj[key];\r\n        Element.setAttribute(key, value);\r\n    }\r\n    return Element;\r\n\r\n}\r\n\r\n/**\r\n * Syntactic sugar for creating a DocumentFragment\r\n *\r\n * @returns {DocumentFragment}\r\n */\r\nexport function createFragment() {\r\n    return doc.createDocumentFragment();\r\n}\r\n\r\n/**\r\n * Syntactic sugar for creating a TextNode\r\n *\r\n * @param {string} str\r\n * @returns {Text}\r\n */\r\nexport function createText(str) {\r\n    return doc.createTextNode(str);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/dom/create.js\n **/","/**\r\n * Checks if given variable is a function\r\n *\r\n * @param {*} functionToCheck\r\n * @returns {boolean}\r\n */\r\nexport default function isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/isFunction.js\n **/","/**\r\n * Checks if `value` is the language type of `Object`.\r\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n *\r\n * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\r\n * @example\r\n *\r\n * _.isObject({});\r\n * // => true\r\n *\r\n * _.isObject([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObject(1);\r\n * // => false\r\n */\r\nexport default function isObject(value) {\r\n    // Avoid a V8 JIT bug in Chrome 19-20.\r\n    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\r\n    var type = typeof value;\r\n    return type == 'function' || (value && type == 'object') || false;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/isObject.js\n **/","import c from './create.js';\r\nimport Component from '../component/Component.js';\r\nimport isObject from '../utils/isObject.js';\r\nimport { addAttributes } from './create.js'\r\n\r\n/**\r\n *  Replaces an Node for another one\r\n *\r\n * @param {Node} parent - parent element to replace child on\r\n * @param {*} child - new child to replace for old child\r\n * @param {boolean} replaceLastChild - replace first or last child\r\n * @returns {Node} child - child element\r\n */\r\nexport default function replace(parent, child, replaceLastChild = false, rLC = false) {\r\n    const arg2isObject = isObject(arguments[2]);\r\n    let replacedChild;\r\n    if (arg2isObject) {\r\n         replacedChild = rLC?\r\n            parent.lastChild:\r\n            parent.firstChild;\r\n    } else {\r\n        replacedChild = replaceLastChild?\r\n            parent.lastChild:\r\n            parent.firstChild;\r\n    }\r\n\r\n    if (typeof child === 'string') {\r\n        child = c(child);\r\n    }\r\n\r\n    if(child instanceof Component) {\r\n        child = child.render()\r\n    }\r\n\r\n    if(arg2isObject) {\r\n        addAttributes(child, replaceLastChild);\r\n    }\r\n\r\n    if(replacedChild) {\r\n        parent.replaceChild(child, replacedChild);\r\n    } else  {\r\n        parent.appendChild(child)\r\n    }\r\n\r\n    return child;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/dom/replace.js\n **/","/**\r\n * Merges given objects\r\n *\r\n * @param {...Object} objs - Any given amount of objects\r\n * @returns {Object}\r\n */\r\nexport default function merge(){\r\n    var object = Array.prototype.shift.call(arguments);\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let obj = arguments[i];\r\n        for (let j in obj) {\r\n            object[j] = obj[j];\r\n        }\r\n    }\r\n\r\n    return object;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/merge.js\n **/","/**\r\n * RequestAnimationFrame polyfill\r\n *\r\n * @returns {*}\r\n */\r\nexport default (function requestAnimationFrame(){\r\n    return  window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function( callback ){ window.setTimeout(callback, 1000 / 60); };\r\n}())\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/requestAnimationFrame.js\n **/","/**\r\n * Polyfills the matches function on Elements\r\n *\r\n * Used with event delegation in Components class\r\n */\r\nexport default (function() {\r\n    if (!Element.prototype.matches) {\r\n        const ep = Element.prototype;\r\n\r\n        if (ep.webkitMatchesSelector) // Chrome <34, SF<7.1, iOS<8\r\n            ep.matches = ep.webkitMatchesSelector;\r\n\r\n        if (ep.msMatchesSelector) // IE9/10/11 & Edge\r\n            ep.matches = ep.msMatchesSelector;\r\n\r\n        if (ep.mozMatchesSelector) // FF<34\r\n            ep.matches = ep.mozMatchesSelector;\r\n    }\r\n}());\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/matches.js\n **/","import capitalize from '../utils/capitalize';\r\nimport Component from '../component/Component.js';\r\nimport replace from './replace.js';\r\nimport { addAttributes } from './create.js';\r\nimport isObject from '../utils/isObject.js';\r\n\r\n/**\r\n * DOM extension can be prefixed with arbitrary string\r\n *\r\n * @param {string} prefix\r\n */\r\nexport default function extension(prefix) {\r\n    // Prevent lookups\r\n    const noPrefix = typeof prefix === 'undefined',\r\n        doc = document,\r\n        ElementPrototype = Element.prototype,\r\n        FragPrototype = DocumentFragment.prototype;\r\n\r\n    /**\r\n     * Returns (prefixed) methodName\r\n     *\r\n     * @param methodName\r\n     * @returns {string}\r\n     */\r\n    function addPrefix(methodName) {\r\n        if(noPrefix) {\r\n            return methodName;\r\n        }\r\n\r\n        return prefix + capitalize(methodName);\r\n    }\r\n    /**\r\n     * Syntactic sugar for getting/setting a attribute.\r\n     *\r\n     * @param {string} name\r\n     * @param {*} value\r\n     * @returns {*|Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('attr'), { value: function (name, value) {\r\n        if (arguments.length === 1) {\r\n            return this.getAttribute(name);\r\n        } else {\r\n            this.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for checking if an attribute exists.\r\n     *\r\n     * @param {string} name\r\n     * @returns {boolean}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('hasAttr'), { value: function (name) {\r\n        return this.hasAttribute(name);\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for removing an attribute.\r\n     *\r\n     * @param {string} name\r\n     * @returns {Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('removeAttr'), { value: function (name) {\r\n        this.removeAttribute(name);\r\n        return this;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for getting or setting a TextNode.\r\n     *\r\n     * @param {string} txt\r\n     * @returns {Element|Text}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('txt'), { value: function (txt) {\r\n        if (arguments.length === 1) {\r\n            this.appendChild(doc.createTextNode(txt));\r\n            return this;\r\n        } else {\r\n            return this.textContent;\r\n        }\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for appending an Element.\r\n     *\r\n     * @param {*} child\r\n     * @param {boolean} chain\r\n     * @returns {Element}\r\n     */\r\n    const appendFnName = addPrefix('append'),\r\n        appendFn = function (child, chain = true, ch = true) {\r\n            if (typeof child === 'string') {\r\n                child = doc.createElement(child);\r\n            }\r\n\r\n            if(child instanceof Component) {\r\n                child = child.render();\r\n            }\r\n\r\n            this.appendChild(child);\r\n\r\n            if (isObject(arguments[1])) {\r\n                addAttributes(child, chain);\r\n                return ch ? child: this;\r\n            } else {\r\n                return chain ? child: this;\r\n            }\r\n\r\n        };\r\n    Object.defineProperty(ElementPrototype, appendFnName, { value: appendFn });\r\n    Object.defineProperty(FragPrototype, appendFnName, { value: appendFn });\r\n\r\n    /**\r\n     * Syntactic sugar for appending an Element\r\n     * on the parent of current Element.\r\n     *\r\n     * @param {*} child\r\n     * @param {boolean} chain\r\n     * @returns {Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('parentAppend'), { value: function (child, chain = true, ch = true) {\r\n        return this.parentNode.append(child, chain, ch);\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for appending an cloned Element\r\n     * to its parent.\r\n     *\r\n     * BEWARE: It does not copy event listeners\r\n     * BEWARE: deep option can have serious performance implications\r\n     *\r\n     * @param {boolean} deep = deep copy or not\r\n     * @returns {Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('cloneAppend'), { value: function (deep = false ) {\r\n        return this.parentNode.append(this.cloneNode(deep));\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for cloning an Element\r\n     *\r\n     * BEWARE: It does not copy event listeners\r\n     * BEWARE: deep option can have serious performance implications\r\n     *\r\n     * @param {boolean} deep = deep copy or not\r\n     * @returns {Element}\r\n     */\r\n    const cloneFnName = addPrefix('clone'),\r\n        cloneFn = function (deep = false ) {\r\n            return this.cloneNode(deep);\r\n        };\r\n    Object.defineProperty(ElementPrototype, cloneFnName, { value: cloneFn });\r\n    Object.defineProperty(FragPrototype, cloneFnName, { value: cloneFn });\r\n\r\n    /**\r\n     * Syntactic sugar for prepending an Element.\r\n     *\r\n     * @param {*} child\r\n     * @param {boolean} chain\r\n     * @returns {Element}\r\n     */\r\n    const prependFnName = addPrefix('prepend'),\r\n        prependFn = function (child, chain = true, ch = true) {\r\n            let firstChild = this.firstChild;\r\n\r\n            if (typeof child === 'string') {\r\n                child = doc.createElement(child);\r\n            }\r\n\r\n            if(child instanceof Component) {\r\n                child = child.render()\r\n            }\r\n\r\n            if(firstChild) {\r\n                this.insertBefore(child, firstChild);\r\n            } else  {\r\n                this.append(child)\r\n            }\r\n\r\n            if (isObject(arguments[1])) {\r\n                addAttributes(child, chain);\r\n                return ch ? child: this;\r\n            } else {\r\n                return chain ? child: this;\r\n            }\r\n\r\n        };\r\n    Object.defineProperty(ElementPrototype, prependFnName, { value: prependFn });\r\n    Object.defineProperty(FragPrototype, prependFnName, { value: prependFn });\r\n\r\n    /**\r\n     * Syntactic sugar for getting the parent Element.\r\n     *\r\n     * @returns {Element|Node}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('parent'), { value: function () {\r\n        return this.parentElement || this.parentNode;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for checking if the Element\r\n     * has a parent.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('hasParent'), { value: function () {\r\n        return !(this.parentElement === null && this.parentNode === null);\r\n    }});\r\n\r\n    /**\r\n     * Recurse to the root Element (which has no parent)\r\n     *\r\n     * @returns {Element|Node}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('root'), { value: function (parent) {\r\n        parent = !parent?\r\n        this.parentElement || this.parentNode:\r\n            parent;\r\n\r\n        while ((parent.parentElement || parent.parentNode) !== null) {\r\n            parent = this.root(parent.parentElement || parent.parentNode);\r\n        }\r\n\r\n        return parent;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for document.querySelector()\r\n     *\r\n     * @param {string} selector\r\n     * @returns {Element}\r\n     */\r\n    const queryFnName = addPrefix('query'),\r\n        queryFn = function (selector) {\r\n            return this.querySelector(selector);\r\n        };\r\n    Object.defineProperty(ElementPrototype, queryFnName, { value: queryFn });\r\n    Object.defineProperty(FragPrototype, queryFnName, { value: queryFn });\r\n\r\n    /**\r\n     * Syntactic sugar for document.querySelectorAll()\r\n     *\r\n     * @param {string} selector\r\n     * @returns {HTMLCollection}\r\n     */\r\n    const queryAllFnName = addPrefix('queryAll'),\r\n        queryAllFn = function (selector) {\r\n            return this.querySelectorAll(selector);\r\n        };\r\n    Object.defineProperty(ElementPrototype, queryAllFnName, { value:queryAllFn });\r\n    Object.defineProperty(FragPrototype, queryAllFnName, { value:queryAllFn });\r\n\r\n    /**\r\n     * Syntactic sugar/polyfill for Element.remove()\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    if (!('remove' in ElementPrototype)) {\r\n        Object.defineProperty(ElementPrototype, addPrefix('remove'), {\r\n            value: function () {\r\n                let parent = this.parentNode;\r\n                if (parent) {\r\n                    parent.removeChild(this);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Syntactic sugar for removing all child Elements\\Nodes\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    const emptyFnName = addPrefix('empty'),\r\n        emptyFn = function () {\r\n            while (this.lastChild) {\r\n                this.removeChild(this.lastChild);\r\n            }\r\n            return this;\r\n        };\r\n    Object.defineProperty(ElementPrototype, emptyFnName, { value: emptyFn});\r\n    Object.defineProperty(FragPrototype, emptyFnName, { value: emptyFn});\r\n\r\n    /**\r\n     * Syntactic sugar for logging\r\n     *\r\n     * When chain methods it can be used to log an Element\r\n     * right in the middle of the chain.\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('log'), { value: function () {\r\n        console.log(this);\r\n        return this;\r\n    }});\r\n\r\n    /**\r\n     * @see ./replace.js\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('replace'), { value: function (child, replaceLastChild = false) {\r\n        return replace(this, child, replaceLastChild);\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for replacing the\r\n     * current Element with a new one.\r\n     *\r\n     * BEWARE: a parent Element must exist\r\n     *\r\n     * @returns {Element} - return the new Element\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('replaceWith'), { value: function (newElement, attributes) {\r\n        if (typeof newElement === 'string') {\r\n            newElement = doc.createElement(newElement);\r\n        }\r\n\r\n        if(typeof attributes !== 'undefined') {\r\n            addAttributes(newElement, attributes);\r\n        }\r\n\r\n        this.parentNode.replaceChild(this, newElement);\r\n        return newElement;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for inserting an Element\r\n     * before another Element\r\n     *\r\n     * BEWARE: a parenNode needs to be available\r\n     *\r\n     * @returns {Element} - the new Element\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('before'), { value: function (newSibling, attributes) {\r\n        let parentNode = this.parentNode;\r\n\r\n        if (typeof newSibling === 'string') {\r\n            newSibling = doc.createElement(newSibling);\r\n        }\r\n\r\n        if(newSibling instanceof Component) {\r\n            newSibling = newSibling.render()\r\n        }\r\n\r\n        if(typeof attributes !== 'undefined') {\r\n            addAttributes(newSibling, attributes);\r\n        }\r\n\r\n        if (parentNode) {\r\n            parentNode.insertBefore(newSibling, this);\r\n        }\r\n        return newSibling;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for inserting an Element\r\n     * after another Element\r\n     *\r\n     * BEWARE: a parenNode needs to be available\r\n     *\r\n     * @returns {Element} - the new Element\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('after'), { value: function (newSibling, attributes) {\r\n        let parentNode = this.parentNode,\r\n            nextSibling = this.nextSibling;\r\n\r\n        if (typeof newSibling === 'string') {\r\n            newSibling = doc.createElement(newSibling);\r\n        }\r\n\r\n        if(newSibling instanceof Component) {\r\n            newSibling = newSibling.render()\r\n        }\r\n\r\n        if(typeof attributes !== 'undefined') {\r\n            addAttributes(newSibling, attributes);\r\n        }\r\n\r\n        if (parentNode) {\r\n            if (nextSibling) {\r\n                parentNode.insertBefore(newSibling, nextSibling);\r\n            } else {\r\n                parentNode.appendChild(newSibling);\r\n            }\r\n        }\r\n\r\n        return newSibling;\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for getting/setting the id\r\n     * of an Element\r\n     *\r\n     * @param {*} id\r\n     * @returns {string|Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('i'), { value: function (id) {\r\n        if (arguments.length === 0) {\r\n            return this.id;\r\n        } else {\r\n            this.id = id;\r\n            return this;\r\n        }\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for getting/setting the name\r\n     * of an Element\r\n     *\r\n     * @param {*} name\r\n     * @returns {string|Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('n'), { value: function (name) {\r\n        if (arguments.length === 0) {\r\n            return this.name;\r\n        } else {\r\n            this.name = name;\r\n            return this;\r\n        }\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for getting/setting the href\r\n     * of an Element\r\n     *\r\n     * @param {*} href\r\n     * @returns {string|Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('h'), { value: function (href) {\r\n        if (arguments.length === 0) {\r\n            return this.href;\r\n        } else {\r\n            this.href = href;\r\n            return this;\r\n        }\r\n    }});\r\n\r\n    /**\r\n     * Syntactic sugar for getting/setting the value\r\n     * of an Element\r\n     *\r\n     * @param {*} value\r\n     * @returns {string|Element}\r\n     */\r\n    Object.defineProperty(ElementPrototype, addPrefix('v'), { value: function (value) {\r\n        if (arguments.length === 0) {\r\n            return this.value;\r\n        } else {\r\n            this.value = value;\r\n            return this;\r\n        }\r\n    }});\r\n}\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/dom/extension.js\n **/","/**\n * Capitalizes string\n *\n * @param {string} str\n * @returns {string}\n */\nexport default function capitalize(str)\t{\n    if(typeof str ===  \"string\"){\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/Users/SFM Workstation/server/www/kompo/src/utils/capitalize.js\n **/"],"sourceRoot":""}